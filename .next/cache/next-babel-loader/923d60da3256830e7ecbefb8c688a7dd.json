{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport PropertyContract from \"../../ethereum/property\";\nimport web3 from \"../../ethereum/web3\";\nimport { Card, Grid, Button } from \"semantic-ui-react\";\n/*import ContributeForm from \"../../components/ContributeForm\";\nimport { Link } from \"../../routes\";*/\n\nclass PropertyShow extends Component {\n  static async getInitialProps(props) {\n    const property = PropertyContract(props.query.address);\n    const summary = await property.methods.getSummary().call();\n    return {\n      //address: props.query.address,\n      minimumContribution: summary[0],\n      balance: summary[1],\n      rentalRequestCount: summary[2],\n      investorsCount: summary[3],\n      rentalStatus: summary[4],\n      manager: summary[5]\n    };\n  }\n\n  renderCards() {\n    const {\n      minimumInvestment,\n      balance,\n      rentalRequestCount,\n      investorsCount,\n      developer\n    } = this.props;\n    const items = [{\n      header: developer,\n      meta: \"Address of Developer\",\n      description: \"The developer who owns this property, Developer can finalize rental contracts.\",\n      style: {\n        overflowWrap: \"break-word\"\n      }\n    }];\n    return __jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"h3\", null, \"Property Information\"), this.renderCards());\n  }\n\n}\n\nexport default PropertyShow;","map":{"version":3,"sources":["/Users/khadijahlawal/Documents/CSIT321/Smart Contracts/POC dapp2/pages/properties/show.js"],"names":["React","Component","Layout","PropertyContract","web3","Card","Grid","Button","PropertyShow","getInitialProps","props","property","query","address","summary","methods","getSummary","call","minimumContribution","balance","rentalRequestCount","investorsCount","rentalStatus","manager","renderCards","minimumInvestment","developer","items","header","meta","description","style","overflowWrap","render"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,mBAAnC;AAEA;;;AAGA,MAAMC,YAAN,SAA2BP,SAA3B,CAAqC;AACjC,eAAaQ,eAAb,CAA6BC,KAA7B,EAAoC;AAC/B,UAAMC,QAAQ,GAAGR,gBAAgB,CAACO,KAAK,CAACE,KAAN,CAAYC,OAAb,CAAjC;AACA,UAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,EAAtB;AACA,WAAO;AACN;AACAC,MAAAA,mBAAmB,EAAEJ,OAAO,CAAC,CAAD,CAFtB;AAGNK,MAAAA,OAAO,EAAEL,OAAO,CAAC,CAAD,CAHV;AAINM,MAAAA,kBAAkB,EAAEN,OAAO,CAAC,CAAD,CAJrB;AAKNO,MAAAA,cAAc,EAAEP,OAAO,CAAC,CAAD,CALjB;AAMNQ,MAAAA,YAAY,EAAER,OAAO,CAAC,CAAD,CANf;AAONS,MAAAA,OAAO,EAAET,OAAO,CAAC,CAAD;AAPV,KAAP;AAUJ;;AAEDU,EAAAA,WAAW,GAAG;AACV,UAAM;AACJC,MAAAA,iBADI;AAEJN,MAAAA,OAFI;AAGJC,MAAAA,kBAHI;AAIJC,MAAAA,cAJI;AAKJK,MAAAA;AALI,QAMF,KAAKhB,KANT;AAQJ,UAAMiB,KAAK,GAAG,CACV;AACEC,MAAAA,MAAM,EAAEF,SADV;AAEEG,MAAAA,IAAI,EAAE,sBAFR;AAGEC,MAAAA,WAAW,EACT,gFAJJ;AAKGC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB;AALV,KADU,CAAd;AASA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEL;AAAnB,MAAP;AACC;;AAIDM,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,MAAD,QACI,yCADJ,EAEK,KAAKT,WAAL,EAFL,CADJ;AAMH;;AA9CgC;;AAiDrC,eAAehB,YAAf","sourcesContent":["\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport PropertyContract from \"../../ethereum/property\";\nimport web3 from \"../../ethereum/web3\";\nimport { Card, Grid, Button } from \"semantic-ui-react\";\n\n/*import ContributeForm from \"../../components/ContributeForm\";\nimport { Link } from \"../../routes\";*/\n\nclass PropertyShow extends Component {\n    static async getInitialProps(props) {\n         const property = PropertyContract(props.query.address);\n         const summary = await property.methods.getSummary().call();\n         return {\n          //address: props.query.address,\n          minimumContribution: summary[0],\n          balance: summary[1],\n          rentalRequestCount: summary[2],\n          investorsCount: summary[3],\n          rentalStatus: summary[4],\n          manager: summary[5]\n         \n        };\n    }\n\n    renderCards() {\n        const {\n          minimumInvestment,\n          balance,\n          rentalRequestCount,\n          investorsCount,\n          developer,\n        } = this.props;\n\n    const items = [\n        {\n          header: developer,\n          meta: \"Address of Developer\",\n          description:\n            \"The developer who owns this property, Developer can finalize rental contracts.\",\n           style: { overflowWrap: \"break-word\" }\n        }];\n\n    return <Card.Group items={items} />;\n    }\n\n\n\n    render() {\n        return (\n            <Layout>\n                <h3>Property Information</h3>\n                {this.renderCards()}\n            </Layout>\n        );\n    }\n}\n\nexport default PropertyShow;"]},"metadata":{},"sourceType":"module"}