{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Message } from \"semantic-ui-react\";\nimport PropertyContract from \"../ethereum/property\";\nimport web3 from \"../ethereum/web3\";\nimport { Router } from \"../routes\";\n\nclass InvestForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      investment: \"\",\n      errorMessage: \"\",\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      const property = PropertyContract(this.props.address);\n      this.setState({\n        loading: true,\n        errorMessage: \"\"\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await property.methods.invest().send({\n          from: accounts[0],\n          value: web3.utils.toWei(this.state.contribution, \"ether\")\n        });\n        Router.replaceRoute(`/properties/${this.props.address}`);\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false,\n        investment: \"\"\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Amount to Invest\"), __jsx(Input, {\n      label: \"ether\",\n      labelPosition: \"right\",\n      value: this.state.investment,\n      onChange: event => this.setState({\n        investment: event.target.value\n      })\n    })), __jsx(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      primary: true,\n      type: \"submit\"\n    }, \"Invest!\"));\n  }\n\n}\n\nexport default InvestForm;","map":{"version":3,"sources":["/Users/khadijahlawal/Documents/CSIT321/Smart Contracts/POC dapp2/components/InvestForm.js"],"names":["React","Component","Form","Button","Input","Message","PropertyContract","web3","Router","InvestForm","investment","errorMessage","loading","event","preventDefault","property","props","address","setState","accounts","eth","getAccounts","methods","invest","send","from","value","utils","toWei","state","contribution","replaceRoute","err","message","render","onSubmit","target"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,OAA9B,QAA6C,mBAA7C;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,UAAN,SAAyBR,SAAzB,CAAmC;AAAA;AAAA;;AAAA,mCACvB;AACJS,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,YAAY,EAAE,EAFV;AAGJC,MAAAA,OAAO,EAAE;AAHL,KADuB;;AAAA,sCAOxB,MAAMC,KAAN,IAAe;AACtBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,QAAQ,GAAGT,gBAAgB,CAAC,KAAKU,KAAL,CAAWC,OAAZ,CAAjC;AACA,WAAKC,QAAL,CAAc;AAAEN,QAAAA,OAAO,EAAE,IAAX;AAAiBD,QAAAA,YAAY,EAAE;AAA/B,OAAd;;AAEA,UAAI;AACA,cAAMQ,QAAQ,GAAG,MAAMZ,IAAI,CAACa,GAAL,CAASC,WAAT,EAAvB;AACA,cAAMN,QAAQ,CAACO,OAAT,CAAiBC,MAAjB,GAA0BC,IAA1B,CAA+B;AACjCC,UAAAA,IAAI,EAAEN,QAAQ,CAAC,CAAD,CADmB;AAEjCO,UAAAA,KAAK,EAAEnB,IAAI,CAACoB,KAAL,CAAWC,KAAX,CAAiB,KAAKC,KAAL,CAAWC,YAA5B,EAA0C,OAA1C;AAF0B,SAA/B,CAAN;AAIAtB,QAAAA,MAAM,CAACuB,YAAP,CAAqB,eAAc,KAAKf,KAAL,CAAWC,OAAQ,EAAtD;AACH,OAPD,CAOE,OAAOe,GAAP,EAAY;AACV,aAAKd,QAAL,CAAc;AAAEP,UAAAA,YAAY,EAAEqB,GAAG,CAACC;AAApB,SAAd;AACH;;AAED,WAAKf,QAAL,CAAc;AAAEN,QAAAA,OAAO,EAAE,KAAX;AAAkBF,QAAAA,UAAU,EAAE;AAA9B,OAAd;AACH,KAxBkC;AAAA;;AAyB/BwB,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,QAArB;AAA+B,MAAA,KAAK,EAAE,CAAC,CAAC,KAAKN,KAAL,CAAWlB;AAAnD,OACI,MAAC,IAAD,CAAM,KAAN,QACI,wCADJ,EAEI,MAAC,KAAD;AACI,MAAA,KAAK,EAAC,OADV;AAEI,MAAA,aAAa,EAAC,OAFlB;AAGI,MAAA,KAAK,EAAE,KAAKkB,KAAL,CAAWnB,UAHtB;AAII,MAAA,QAAQ,EAAEG,KAAK,IACX,KAAKK,QAAL,CAAc;AAAER,QAAAA,UAAU,EAAEG,KAAK,CAACuB,MAAN,CAAaV;AAA3B,OAAd;AALR,MAFJ,CADJ,EAYI,MAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAe,MAAA,MAAM,EAAC,OAAtB;AAA8B,MAAA,OAAO,EAAE,KAAKG,KAAL,CAAWlB;AAAlD,MAZJ,EAaI,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKkB,KAAL,CAAWjB,OAA5B;AAAqC,MAAA,OAAO,MAA5C;AAA6C,MAAA,IAAI,EAAC;AAAlD,iBAbJ,CADJ;AAmBH;;AA7C8B;;AAgDnC,eAAeH,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Input, Message } from \"semantic-ui-react\";\nimport PropertyContract from \"../ethereum/property\";\nimport web3 from \"../ethereum/web3\";\nimport { Router } from \"../routes\";\n\nclass InvestForm extends Component {\n    state = {\n        investment: \"\",\n        errorMessage: \"\",\n        loading: false\n    };\n\nonSubmit = async event => {\n    event.preventDefault();\n    const property = PropertyContract(this.props.address);\n    this.setState({ loading: true, errorMessage: \"\" });\n\n    try {\n        const accounts = await web3.eth.getAccounts();\n        await property.methods.invest().send({\n            from: accounts[0],\n            value: web3.utils.toWei(this.state.contribution, \"ether\")\n        });\n        Router.replaceRoute(`/properties/${this.props.address}`);\n    } catch (err) {\n        this.setState({ errorMessage: err.message });\n    }\n\n    this.setState({ loading: false, investment: \"\" });\n};\n    render() {\n        return (\n            <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n                <Form.Field>\n                    <label>Amount to Invest</label>\n                    <Input\n                        label=\"ether\"\n                        labelPosition=\"right\"\n                        value={this.state.investment}\n                        onChange={event =>\n                            this.setState({ investment: event.target.value })\n                        }\n                    />\n                </Form.Field>\n                <Message error header=\"Oops!\" content={this.state.errorMessage} />\n                <Button loading={this.state.loading} primary type=\"submit\">\n                    Invest!\n            </Button>\n            </Form>\n        );\n    }\n}\n\nexport default InvestForm;\n"]},"metadata":{},"sourceType":"module"}