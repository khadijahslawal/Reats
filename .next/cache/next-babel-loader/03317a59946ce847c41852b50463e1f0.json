{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport PropertyContract from \"../../ethereum/property\";\nimport web3 from \"../../ethereum/web3\";\nimport { Card, Grid, Button } from \"semantic-ui-react\";\nimport InvestForm from \"../../components/InvestForm\";\nimport { Link } from \"../../routes\";\n\nclass PropertyShow extends Component {\n  static async getInitialProps(props) {\n    const property = PropertyContract(props.query.address);\n    const summary = await property.methods.getSummary().call();\n    return {\n      address: props.query.address,\n      minimumInvestment: summary[0],\n      balance: summary[1],\n      rentalRequestCount: summary[2],\n      investorsCount: summary[3],\n      rentalStatus: summary[4],\n      developer: summary[5],\n      propertyName: summary[6],\n      city: summary[7],\n      sellingPrice: summary[8],\n      rentingPrice: summary[9]\n    };\n  }\n\n  renderCards() {\n    const {\n      minimumInvestment,\n      balance,\n      rentalRequestCount,\n      investorsCount,\n      rentalStatus,\n      developer,\n      propertyName,\n      sellingPrice,\n      rentingPrice\n    } = this.props;\n    const items = [{\n      header: developer,\n      meta: \"Address of Developer\",\n      description: \"The developer who owns this property, Developer can finalize rental contracts.\",\n      style: {\n        overflowWrap: \"break-word\"\n      }\n    }, {\n      header: minimumInvestment,\n      meta: \"Minimum Contribution (wei)\",\n      description: \"You must contribute atleast this much to become an investor\"\n    }, {\n      header: rentalRequestCount,\n      meta: \"Number of rental requests\",\n      description: \"Rental Request. Requests must be approved by investors\"\n    }, {\n      header: investorsCount,\n      meta: \"Number of investors\",\n      description: \"Number of people who have invested into this property.\"\n    }, {\n      header: web3.utils.fromWei(balance, \"ether\"),\n      meta: \"Property Balance (ethers)\",\n      description: \"Balance is how much has been invested into the property.\"\n    }, {\n      header: rentalStatus,\n      meta: \"Property Rental Status\",\n      description: \"Marks property as rented or not\"\n    }];\n    return __jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"div\", null, __jsx(\"h1\", null, \"Property Details\"), __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      mobile: 9\n    }, this.renderCards()), __jsx(Grid.Column, {\n      mobile: 5\n    }, __jsx(InvestForm, {\n      address: this.props.address\n    }))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Link, {\n      route: `/campaigns/${this.props.address}/requests`\n    }, __jsx(\"a\", null, __jsx(Button, {\n      primary: true\n    }, \"View Rental Requests\"))))))));\n  }\n\n}\n\nexport default PropertyShow;","map":{"version":3,"sources":["/Users/khadijahlawal/Documents/CSIT321/Smart Contracts/POC dapp2/pages/properties/show.js"],"names":["React","Component","Layout","PropertyContract","web3","Card","Grid","Button","InvestForm","Link","PropertyShow","getInitialProps","props","property","query","address","summary","methods","getSummary","call","minimumInvestment","balance","rentalRequestCount","investorsCount","rentalStatus","developer","propertyName","city","sellingPrice","rentingPrice","renderCards","items","header","meta","description","style","overflowWrap","utils","fromWei","render"],"mappings":"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","sourcesContent":["\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport PropertyContract from \"../../ethereum/property\";\nimport web3 from \"../../ethereum/web3\";\nimport { Card, Grid, Button } from \"semantic-ui-react\";\nimport InvestForm from \"../../components/InvestForm\";\nimport { Link } from \"../../routes\";\n\nclass PropertyShow extends Component {\n    static async getInitialProps(props) {\n         const property = PropertyContract(props.query.address);\n         const summary = await property.methods.getSummary().call();\n         return {\n          address: props.query.address,\n          minimumInvestment: summary[0],\n          balance: summary[1],\n          rentalRequestCount: summary[2],\n          investorsCount: summary[3],\n          rentalStatus: summary[4],\n          developer: summary[5],\n          propertyName: summary[6],\n          city: summary[7],\n          sellingPrice: summary[8],\n          rentingPrice: summary[9]\n        };\n    }\n\n    renderCards() {\n        const {\n          minimumInvestment,\n          balance,\n          rentalRequestCount,\n          investorsCount,\n          rentalStatus,\n          developer,\n          propertyName,\n          sellingPrice,\n          rentingPrice\n          \n        } = this.props;\n\n    const items = [\n        {\n          header: developer,\n          meta: \"Address of Developer\",\n          description:\n            \"The developer who owns this property, Developer can finalize rental contracts.\",\n           style: { overflowWrap: \"break-word\" }\n        }, \n        \n      {\n        header: minimumInvestment,\n        meta: \"Minimum Contribution (wei)\",\n        description:\n          \"You must contribute atleast this much to become an investor\",\n      },\n      {\n        header: rentalRequestCount,\n        meta: \"Number of rental requests\",\n        description:\n          \"Rental Request. Requests must be approved by investors\",\n      },\n      {\n        header: investorsCount,\n        meta: \"Number of investors\",\n        description:\n          \"Number of people who have invested into this property.\",\n      },\n      {\n        header: web3.utils.fromWei(balance, \"ether\"),\n        meta: \"Property Balance (ethers)\",\n        description:\n          \"Balance is how much has been invested into the property.\",\n      },\n      {\n        header: rentalStatus,\n        meta: \"Property Rental Status\",\n        description:\n          \"Marks property as rented or not\",\n      },\n        ];\n\n    return <Card.Group items={items} />;\n    }\n\n\n    render() {\n        return (\n          <Layout>\n            <div>\n              <h1>Property Details</h1>\n              <Grid>\n                <Grid.Row>\n                  <Grid.Column mobile={9}>{this.renderCards()}</Grid.Column>\n                  <Grid.Column mobile={5}>\n                    <InvestForm address={this.props.address} />\n                  </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                  <Grid.Column>\n                    <Link route={`/campaigns/${this.props.address}/requests`}>\n                      <a>\n                        <Button primary>View Rental Requests</Button>\n                      </a>\n                    </Link>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </div>\n          </Layout>\n        );\n      }\n}\n\nexport default PropertyShow;"]},"metadata":{},"sourceType":"module"}