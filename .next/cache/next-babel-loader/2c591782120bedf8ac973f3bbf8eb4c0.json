{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport PropertyContract from \"../../ethereum/property\";\nimport web3 from \"../../ethereum/web3\";\nimport { Card, Grid, Button } from \"semantic-ui-react\";\nimport InvestForm from \"../../components/InvestForm\";\nimport { Link } from \"../../routes\";\n\nvar PropertyShow = /*#__PURE__*/function (_Component) {\n  _inherits(PropertyShow, _Component);\n\n  var _super = _createSuper(PropertyShow);\n\n  function PropertyShow() {\n    _classCallCheck(this, PropertyShow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PropertyShow, [{\n    key: \"renderCards\",\n    value: function renderCards() {\n      var _this$props = this.props,\n          minimumInvestment = _this$props.minimumInvestment,\n          balance = _this$props.balance,\n          rentalRequestCount = _this$props.rentalRequestCount,\n          investorsCount = _this$props.investorsCount,\n          rentalStatus = _this$props.rentalStatus,\n          developer = _this$props.developer;\n      var items = [{\n        header: developer,\n        meta: \"Address of Developer\",\n        description: \"The developer who owns this property, Developer can finalize rental contracts.\",\n        style: {\n          overflowWrap: \"break-word\"\n        }\n      }, {\n        header: minimumInvestment,\n        meta: \"Minimum Contribution (wei)\",\n        description: \"You must contribute atleast this much to become an investor\"\n      }, {\n        header: rentalRequestCount,\n        meta: \"Number of rental requests\",\n        description: \"Rental Request. Requests must be approved by investors\"\n      }, {\n        header: investorsCount,\n        meta: \"Number of investors\",\n        description: \"Number of people who have invested into this property.\"\n      }, {\n        header: web3.utils.fromWei(balance, \"ether\"),\n        meta: \"Property Balance (ethers)\",\n        description: \"Balance is how much has been invested into the property.\"\n      }, {\n        header: rentalStatus,\n        meta: \"Property Rental Status\",\n        description: \"Marks property as rented or not\"\n      }];\n      return __jsx(Card.Group, {\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(\"div\", null, __jsx(\"h1\", null, \"Property Details\"), __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        mobile: 9\n      }, this.renderCards()), __jsx(Grid.Column, {\n        mobile: 5\n      }, __jsx(InvestForm, {\n        address: this.props.address\n      }))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Link, {\n        route: \"/campaigns/\".concat(this.props.address, \"/requests\")\n      }, __jsx(\"a\", null, __jsx(Button, {\n        primary: true\n      }, \"View Rental Requests\"))))))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n        var property, summary;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                property = PropertyContract(props.query.address);\n                _context.next = 3;\n                return property.methods.getSummary().call();\n\n              case 3:\n                summary = _context.sent;\n                return _context.abrupt(\"return\", {\n                  address: props.query.address,\n                  minimumInvestment: summary[0],\n                  balance: summary[1],\n                  rentalRequestCount: summary[2],\n                  investorsCount: summary[3],\n                  rentalStatus: summary[4],\n                  developer: summary[5],\n                  propertyName: summary[6],\n                  city: summary[7],\n                  sellingPrice: summary[8],\n                  rentingPrice: summary[9]\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return PropertyShow;\n}(Component);\n\nexport default PropertyShow;","map":{"version":3,"sources":["/Users/khadijahlawal/Documents/CSIT321/Smart Contracts/POC dapp2/pages/properties/show.js"],"names":["React","Component","Layout","PropertyContract","web3","Card","Grid","Button","InvestForm","Link","PropertyShow","props","minimumInvestment","balance","rentalRequestCount","investorsCount","rentalStatus","developer","items","header","meta","description","style","overflowWrap","utils","fromWei","renderCards","address","property","query","methods","getSummary","call","summary","propertyName","city","sellingPrice","rentingPrice"],"mappings":"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","sourcesContent":["\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport PropertyContract from \"../../ethereum/property\";\nimport web3 from \"../../ethereum/web3\";\nimport { Card, Grid, Button } from \"semantic-ui-react\";\nimport InvestForm from \"../../components/InvestForm\";\nimport { Link } from \"../../routes\";\n\nclass PropertyShow extends Component {\n    static async getInitialProps(props) {\n         const property = PropertyContract(props.query.address);\n         const summary = await property.methods.getSummary().call();\n         return {\n          address: props.query.address,\n          minimumInvestment: summary[0],\n          balance: summary[1],\n          rentalRequestCount: summary[2],\n          investorsCount: summary[3],\n          rentalStatus: summary[4],\n          developer: summary[5],\n          propertyName: summary[6],\n          city: summary[7],\n          sellingPrice: summary[8],\n          rentingPrice: summary[9]\n        };\n    }\n\n    renderCards() {\n        const {\n          minimumInvestment,\n          balance,\n          rentalRequestCount,\n          investorsCount,\n          rentalStatus,\n          developer\n        } = this.props;\n\n    const items = [\n        {\n          header: developer,\n          meta: \"Address of Developer\",\n          description:\n            \"The developer who owns this property, Developer can finalize rental contracts.\",\n           style: { overflowWrap: \"break-word\" }\n        }, \n        \n      {\n        header: minimumInvestment,\n        meta: \"Minimum Contribution (wei)\",\n        description:\n          \"You must contribute atleast this much to become an investor\",\n      },\n      {\n        header: rentalRequestCount,\n        meta: \"Number of rental requests\",\n        description:\n          \"Rental Request. Requests must be approved by investors\",\n      },\n      {\n        header: investorsCount,\n        meta: \"Number of investors\",\n        description:\n          \"Number of people who have invested into this property.\",\n      },\n      {\n        header: web3.utils.fromWei(balance, \"ether\"),\n        meta: \"Property Balance (ethers)\",\n        description:\n          \"Balance is how much has been invested into the property.\",\n      },\n      {\n        header: rentalStatus,\n        meta: \"Property Rental Status\",\n        description:\n          \"Marks property as rented or not\",\n      },\n        ];\n\n    return <Card.Group items={items} />;\n    }\n\n\n    render() {\n        return (\n          <Layout>\n            <div>\n              <h1>Property Details</h1>\n              <Grid>\n                <Grid.Row>\n                  <Grid.Column mobile={9}>{this.renderCards()}</Grid.Column>\n                  <Grid.Column mobile={5}>\n                    <InvestForm address={this.props.address} />\n                  </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                  <Grid.Column>\n                    <Link route={`/campaigns/${this.props.address}/requests`}>\n                      <a>\n                        <Button primary>View Rental Requests</Button>\n                      </a>\n                    </Link>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </div>\n          </Layout>\n        );\n      }\n}\n\nexport default PropertyShow;"]},"metadata":{},"sourceType":"module"}