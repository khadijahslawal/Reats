{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport PropertyContract from \"../../../ethereum/property\";\nimport { Button, Table } from \"semantic-ui-react\"; //import RequestRow from \"../../../components/RequestRow\";*/\n\nclass RentalRequestsIndex extends Component {\n  static async getInitialProps(props) {\n    const {\n      address\n    } = props.query;\n    const property = PropertyContract(address);\n    const requestCount = await property.methods.getRentalRequestCount().call();\n    const approversCount = await property.methods.approversCount().call();\n    const requests = await Promise.all(Array(parseInt(requestCount)).fill().map((element, index) => {\n      return property.methods.requests(index).call();\n    }));\n    return {\n      address,\n      requests,\n      requestCount,\n      approversCount\n    };\n  }\n\n  renderRow() {\n    return this.props.requests.map((request, index) => {\n      return __jsx(RequestRow, {\n        onRequestsUpdate: this.onRequestsUpdate,\n        request: request,\n        key: index,\n        id: index,\n        address: this.props.address,\n        approversCount: this.props.approversCount\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"h3\", null, \"Rental Requests\"), __jsx(Link, {\n      route: `/properties/${this.props.address}/requests/new`\n    }, __jsx(\"a\", null, __jsx(Button, {\n      primary: true\n    }, \"Add Request\"))));\n  }\n\n}\n\nexport default RentalRequestsIndex;","map":{"version":3,"sources":["/Users/khadijahlawal/Documents/CSIT321/Smart Contracts/POC dapp2/pages/properties/requests/index.js"],"names":["React","Component","Layout","PropertyContract","Button","Table","RentalRequestsIndex","getInitialProps","props","address","query","property","requestCount","methods","getRentalRequestCount","call","approversCount","requests","Promise","all","Array","parseInt","fill","map","element","index","renderRow","request","onRequestsUpdate","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B,C,CAEA;;AAEA,MAAMC,mBAAN,SAAkCL,SAAlC,CAA4C;AAExC,eAAaM,eAAb,CAA6BC,KAA7B,EAAoC;AAChC,UAAM;AAAEC,MAAAA;AAAF,QAAcD,KAAK,CAACE,KAA1B;AACA,UAAMC,QAAQ,GAAGR,gBAAgB,CAACM,OAAD,CAAjC;AACA,UAAMG,YAAY,GAAG,MAAMD,QAAQ,CAACE,OAAT,CAAiBC,qBAAjB,GAAyCC,IAAzC,EAA3B;AACA,UAAMC,cAAc,GAAG,MAAML,QAAQ,CAACE,OAAT,CAAiBG,cAAjB,GAAkCD,IAAlC,EAA7B;AAEA,UAAME,QAAQ,GAAG,MAAMC,OAAO,CAACC,GAAR,CACrBC,KAAK,CAACC,QAAQ,CAACT,YAAD,CAAT,CAAL,CACGU,IADH,GAEGC,GAFH,CAEO,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACvB,aAAOd,QAAQ,CAACE,OAAT,CAAiBI,QAAjB,CAA0BQ,KAA1B,EAAiCV,IAAjC,EAAP;AACD,KAJH,CADqB,CAAvB;AAOA,WAAO;AAAEN,MAAAA,OAAF;AAAWQ,MAAAA,QAAX;AAAqBL,MAAAA,YAArB;AAAmCI,MAAAA;AAAnC,KAAP;AACD;;AAEDU,EAAAA,SAAS,GAAG;AACV,WAAO,KAAKlB,KAAL,CAAWS,QAAX,CAAoBM,GAApB,CAAwB,CAACI,OAAD,EAAUF,KAAV,KAAoB;AACjD,aACE,MAAC,UAAD;AACE,QAAA,gBAAgB,EAAE,KAAKG,gBADzB;AAEE,QAAA,OAAO,EAAED,OAFX;AAGE,QAAA,GAAG,EAAEF,KAHP;AAIE,QAAA,EAAE,EAAEA,KAJN;AAKE,QAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWC,OALtB;AAME,QAAA,cAAc,EAAE,KAAKD,KAAL,CAAWQ;AAN7B,QADF;AAUD,KAXM,CAAP;AAYD;;AAEHa,EAAAA,MAAM,GAAE;AACJ,WACI,MAAC,MAAD,QACI,oCADJ,EAEI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAG,eAAc,KAAKrB,KAAL,CAAWC,OAAQ;AAA/C,OACG,iBACI,MAAC,MAAD;AAAQ,MAAA,OAAO;AAAf,qBADJ,CADH,CAFJ,CADJ;AAUH;;AA5CuC;;AAgD5C,eAAeH,mBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport PropertyContract from \"../../../ethereum/property\";\nimport { Button, Table } from \"semantic-ui-react\";\n\n//import RequestRow from \"../../../components/RequestRow\";*/\n\nclass RentalRequestsIndex extends Component {\n\n    static async getInitialProps(props) {\n        const { address } = props.query;\n        const property = PropertyContract(address);\n        const requestCount = await property.methods.getRentalRequestCount().call();\n        const approversCount = await property.methods.approversCount().call();\n    \n        const requests = await Promise.all(\n          Array(parseInt(requestCount))\n            .fill()\n            .map((element, index) => {\n              return property.methods.requests(index).call();\n            })\n        );\n        return { address, requests, requestCount, approversCount };\n      }\n     \n      renderRow() {\n        return this.props.requests.map((request, index) => {\n          return (\n            <RequestRow\n              onRequestsUpdate={this.onRequestsUpdate}\n              request={request}\n              key={index}\n              id={index}\n              address={this.props.address}\n              approversCount={this.props.approversCount}\n            />\n          );\n        });\n      }\n      \n    render(){\n        return(\n            <Layout>\n                <h3>Rental Requests</h3>\n                <Link route={`/properties/${this.props.address}/requests/new`}>\n                   <a>\n                       <Button primary>Add Request</Button>\n                   </a>\n                </Link>\n            </Layout>\n        )\n    }\n}\n    \n\nexport default RentalRequestsIndex;"]},"metadata":{},"sourceType":"module"}