{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Table, Button } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport PropertyContract from \"../ethereum/property\";\n\nclass RequestRow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onApprove\", async () => {\n      const property = PropertyContract(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await property.methods.approveRentalRequest(this.props.id).send({\n        from: accounts[0]\n      });\n    });\n\n    _defineProperty(this, \"onFinalize\", async () => {\n      const property = PropertyContract(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await property.methods.finalizeRequest(this.props.id).send({\n        from: accounts[0]\n      });\n    });\n  }\n\n  render() {\n    const {\n      request,\n      id,\n      approversCount\n    } = this.props;\n    const readyToFinalize = request.approvalCount > approversCount / 2;\n    return __jsx(Table.Row, {\n      disabled: request.complete,\n      positive: !!readyToFinalize && !request.complete\n    }, __jsx(Table.Cell, null, id), __jsx(Table.Cell, null, web3.utils.fromWei(request.value, \"ether\")), __jsx(Table.Cell, null, request.renter), __jsx(Table.Cell, null, request.approvalCount, \"/\", approversCount), __jsx(Table.Cell, null, request.complete ? null : __jsx(Button, {\n      color: \"green\",\n      basic: true,\n      onClick: this.onApprove\n    }, \"Approve\")), __jsx(Table.Cell, null, request.complete ? null : __jsx(Button, {\n      color: \"teal\",\n      basic: true,\n      onClick: this.onFinalize\n    }, \"Finalize\")));\n  }\n\n}\n\nexport default RequestRow;","map":{"version":3,"sources":["/Users/khadijahlawal/Documents/CSIT321/Smart Contracts/POC dapp2/components/RequestRow.js"],"names":["React","Component","Table","Button","web3","PropertyContract","RequestRow","property","props","address","accounts","eth","getAccounts","methods","approveRentalRequest","id","send","from","finalizeRequest","render","request","approversCount","readyToFinalize","approvalCount","complete","utils","fromWei","value","renter","onApprove","onFinalize"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,mBAA9B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAAA;AAAA;;AAAA,uCACrB,YAAY;AACtB,YAAMM,QAAQ,GAAEF,gBAAgB,CAAC,KAAKG,KAAL,CAAWC,OAAZ,CAAhC;AACA,YAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACO,GAAL,CAASC,WAAT,EAAvB;AACA,YAAML,QAAQ,CAACM,OAAT,CACHC,oBADG,CACkB,KAAKN,KAAL,CAAWO,EAD7B,EAEHC,IAFG,CAEE;AAAEC,QAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AAAhB,OAFF,CAAN;AAGD,KAPgC;;AAAA,wCASpB,YAAY;AACvB,YAAMH,QAAQ,GAAGF,gBAAgB,CAAC,KAAKG,KAAL,CAAWC,OAAZ,CAAjC;AACA,YAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACO,GAAL,CAASC,WAAT,EAAvB;AACA,YAAML,QAAQ,CAACM,OAAT,CACHK,eADG,CACa,KAAKV,KAAL,CAAWO,EADxB,EAEHC,IAFG,CAEE;AAAEC,QAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AAAhB,OAFF,CAAN;AAGD,KAfgC;AAAA;;AAiBjCS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,OAAF;AAAWL,MAAAA,EAAX;AAAeM,MAAAA;AAAf,QAAkC,KAAKb,KAA7C;AACA,UAAMc,eAAe,GAAGF,OAAO,CAACG,aAAR,GAAwBF,cAAc,GAAG,CAAjE;AACA,WACE,MAAC,KAAD,CAAO,GAAP;AACE,MAAA,QAAQ,EAAED,OAAO,CAACI,QADpB;AAEE,MAAA,QAAQ,EAAE,CAAC,CAACF,eAAF,IAAqB,CAACF,OAAO,CAACI;AAF1C,OAIE,MAAC,KAAD,CAAO,IAAP,QAAaT,EAAb,CAJF,EAKE,MAAC,KAAD,CAAO,IAAP,QAAaX,IAAI,CAACqB,KAAL,CAAWC,OAAX,CAAmBN,OAAO,CAACO,KAA3B,EAAkC,OAAlC,CAAb,CALF,EAME,MAAC,KAAD,CAAO,IAAP,QAAaP,OAAO,CAACQ,MAArB,CANF,EAOE,MAAC,KAAD,CAAO,IAAP,QACGR,OAAO,CAACG,aADX,OAC2BF,cAD3B,CAPF,EAUE,MAAC,KAAD,CAAO,IAAP,QACGD,OAAO,CAACI,QAAR,GAAmB,IAAnB,GACC,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,KAAK,MAA3B;AAA4B,MAAA,OAAO,EAAE,KAAKK;AAA1C,iBAFJ,CAVF,EAiBE,MAAC,KAAD,CAAO,IAAP,QACGT,OAAO,CAACI,QAAR,GAAmB,IAAnB,GACC,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,KAAK,MAA1B;AAA2B,MAAA,OAAO,EAAE,KAAKM;AAAzC,kBAFJ,CAjBF,CADF;AA2BD;;AA/CgC;;AAkDnC,eAAexB,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Table, Button } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport PropertyContract from \"../ethereum/property\";\n\nclass RequestRow extends Component {\n  onApprove = async () => {\n    const property= PropertyContract(this.props.address);\n    const accounts = await web3.eth.getAccounts();\n    await property.methods\n      .approveRentalRequest(this.props.id)\n      .send({ from: accounts[0] });\n  };\n\n  onFinalize = async () => {\n    const property = PropertyContract(this.props.address);\n    const accounts = await web3.eth.getAccounts();\n    await property.methods\n      .finalizeRequest(this.props.id)\n      .send({ from: accounts[0] });\n  };\n\n  render() {\n    const { request, id, approversCount } = this.props;\n    const readyToFinalize = request.approvalCount > approversCount / 2;\n    return (\n      <Table.Row\n        disabled={request.complete}\n        positive={!!readyToFinalize && !request.complete}\n      >\n        <Table.Cell>{id}</Table.Cell>\n        <Table.Cell>{web3.utils.fromWei(request.value, \"ether\")}</Table.Cell>\n        <Table.Cell>{request.renter}</Table.Cell>\n        <Table.Cell>\n          {request.approvalCount}/{approversCount}\n        </Table.Cell>\n        <Table.Cell>\n          {request.complete ? null : (\n            <Button color=\"green\" basic onClick={this.onApprove}>\n              Approve\n            </Button>\n          )}\n        </Table.Cell>\n        <Table.Cell>\n          {request.complete ? null : (\n            <Button color=\"teal\" basic onClick={this.onFinalize}>\n              Finalize\n            </Button>\n          )}\n        </Table.Cell>\n      </Table.Row>\n    );\n  }\n}\n\nexport default RequestRow;"]},"metadata":{},"sourceType":"module"}