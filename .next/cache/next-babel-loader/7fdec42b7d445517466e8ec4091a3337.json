{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/khadijahlawal/Documents/CSIT321/Smart Contracts/POC dapp2/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Card, Button, Image } from 'semantic-ui-react';\nimport Layout from '../components/Layout';\nimport factory from \"../ethereum/factory\";\n\nvar PropertyIndex = /*#__PURE__*/function (_Component) {\n  _inherits(PropertyIndex, _Component);\n\n  var _super = _createSuper(PropertyIndex);\n\n  function PropertyIndex() {\n    _classCallCheck(this, PropertyIndex);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PropertyIndex, [{\n    key: \"render\",\n\n    /*renderProperties(){\n        const items = this.props.properties.map(address => {\n          return {\n              header: address,\n              description: <a>View Property</a>,\n              image:'/images/avatar/large/elliot.jpg',\n            //  image: \"https://react.semantic-ui.com/images/avatar/large/matthew.png\",\n               fluid: true\n          };\n        });\n        return <Card.Group items={items} />;\n    }*/\n\n    /* render(){\n         return\n             <Layout>\n               <div>\n                 <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css\" ></link>\n                 <h3>Properties</h3>\n                 {this.renderProperties()}\n                 <Button\n                     content=\"Add Property\"\n                     icon=\"add circle\"\n                     primary\n                 />\n                 </div>\n             </Layout> \n     }*/\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 16\n        }\n      }, this.props.properties[0]);\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var properties;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return factory.methods.getDeployedProperties().call();\n\n              case 2:\n                properties = _context.sent;\n                return _context.abrupt(\"return\", {\n                  properties: properties\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return PropertyIndex;\n}(Component);\n\nexport default PropertyIndex;","map":{"version":3,"sources":["/Users/khadijahlawal/Documents/CSIT321/Smart Contracts/POC dapp2/pages/index.js"],"names":["React","Component","Card","Button","Image","Layout","factory","PropertyIndex","props","properties","methods","getDeployedProperties","call"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAsBC,KAAtB,QAAmC,mBAAnC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;IAGMC,a;;;;;;;;;;;;;;AAMF;;;;;;;;;;;;;AAaD;;;;;;;;;;;;;;;6BAgBS;AACJ,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKC,KAAL,CAAWC,UAAX,CAAsB,CAAtB,CAAN,CAAP;AACH;;;;;;;;;;;uBAnC4BH,OAAO,CAACI,OAAR,CAAgBC,qBAAhB,GAAwCC,IAAxC,E;;;AAAnBH,gBAAAA,U;iDACC;AAAEA,kBAAAA,UAAU,EAAVA;AAAF,iB;;;;;;;;;;;;;;;;;;;EAHaR,S;;AAwC5B,eAAeM,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Button,Image } from 'semantic-ui-react';\nimport Layout from '../components/Layout';\nimport factory from \"../ethereum/factory\";\n\n\nclass PropertyIndex extends Component {\n    static async getInitialProps() {\n        const properties = await factory.methods.getDeployedProperties().call();\n        return { properties};\n    }\n\n    /*renderProperties(){\n        const items = this.props.properties.map(address => {\n          return {\n              header: address,\n              description: <a>View Property</a>,\n              image:'/images/avatar/large/elliot.jpg',\n            //  image: \"https://react.semantic-ui.com/images/avatar/large/matthew.png\",\n               fluid: true\n          };\n        });\n        return <Card.Group items={items} />;\n    }*/\n\n   /* render(){\n        return\n            <Layout>\n              <div>\n                <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css\" ></link>\n                <h3>Properties</h3>\n                {this.renderProperties()}\n                <Button\n                    content=\"Add Property\"\n                    icon=\"add circle\"\n                    primary\n                />\n                </div>\n            </Layout> \n    }*/\n\n    render(){\n        return <div>{this.props.properties[0]}</div>\n    }\n}\n\nexport default PropertyIndex;"]},"metadata":{},"sourceType":"module"}